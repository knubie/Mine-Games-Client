// Generated by CoffeeScript 1.3.2
var onBodyLoad, onDeviceReady, preventBehavior, server_url;

server_url = "http://localhost:3000";

preventBehavior = function(e) {
  return e.preventDefault();
};

document.addEventListener("touchmove", preventBehavior, false);

onBodyLoad = function() {
  return document.addEventListener("deviceready", onDeviceReady, false);
};

onDeviceReady = function() {
  return $(function() {
    var facebook_auth, faye, get_lobby;
    faye = new Faye.Client('http://localhost:9292/faye');
    faye.subscribe('/matches/new', function(data) {
      var user;
      console.log(data);
      return $('.matches').append("<li><a href='#match' class='match-list-item' data-transition='slide' data-id='" + data.match.id + "'>" + ((function() {
        var _i, _len, _ref, _results;
        _ref = data.match.users;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          user = _ref[_i];
          _results.push(user.username);
        }
        return _results;
      })()) + "</a></li>").listview('refresh');
    });
    get_lobby = function() {
      console.log('get lobby');
      console.log("cookie: " + ($.cookie('token')));
      return $.ajax({
        type: 'GET',
        url: "" + server_url + "/matches.json",
        dataType: 'json',
        success: function(data) {
          var add, match, _i, _len, _results;
          console.log('got matches');
          $('.matches').html('');
          add = function(match) {
            var user;
            return $('.matches').append("<li><a href='#match' class='match-list-item' data-transition='slide' data-id='" + match.id + "'>" + ((function() {
              var _i, _len, _ref, _results;
              _ref = match.users;
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                user = _ref[_i];
                _results.push(user.username);
              }
              return _results;
            })()) + "</a></li>").listview('refresh');
          };
          _results = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            match = data[_i];
            _results.push(add(match));
          }
          return _results;
        }
      });
    };
    facebook_auth = function(callback) {
      window.plugins.childBrowser.showWebPage("" + server_url + "/auth/facebook?display=touch");
      return window.plugins.childBrowser.onLocationChange = function(loc) {
        var access_token;
        if (/access_token/.test(loc)) {
          console.log('token found');
          access_token = unescape(loc).split("access_token/")[1];
          $.cookie("token", access_token, {
            expires: 7300
          });
          window.plugins.childBrowser.close();
          return callback();
        }
      };
    };
    if ($.cookie("token") != null) {
      console.log("cookie: " + ($.cookie('token')));
      $.mobile.changePage("#lobby", {
        transition: "none"
      });
      get_lobby();
    }
    $("#facebook-auth").click(function() {
      return facebook_auth(function() {
        return $.mobile.changePage("#lobby", {
          transition: "none"
        });
      });
    });
    $('.logout').click(function() {
      console.log("cookie: " + ($.cookie('token')));
      $.cookie('token', null);
      return $.mobile.changePage("#home", {
        transition: "flip"
      });
    });
    $('#lobby').live('pageshow', function() {
      return get_lobby();
    });
    $('#refresh_lobby').click(function() {
      return get_lobby();
    });
    $('#new_match_facebook').live('pageshow', function() {
      console.log("cookie: " + ($.cookie('token')));
      return $.ajax({
        type: 'GET',
        url: "" + server_url + "/friends.json",
        dataType: 'json',
        success: function(data) {
          var friend, list, _i, _len, _ref, _results;
          console.log('victory is mine!');
          console.log(data);
          $("#play_friends").html('');
          list = function(friend, type) {
            return $("#" + type).append("<label><input id='users_' name='users[]' type='checkbox' value='" + friend.id + "'>" + friend.name + "</label>").trigger('create');
          };
          _ref = data.play_friends;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            friend = _ref[_i];
            _results.push(list(friend, 'play_friends'));
          }
          return _results;
        },
        error: function(xhr, txtstat, err) {
          return console.log(err);
        }
      });
    });
    $('.match-list-item').live("click", function() {
      console.log('getting match data');
      return $.getJSON("" + server_url + "/matches/" + ($(this).attr('data-id')) + ".json", function(data) {
        var add, card, _i, _len, _ref, _results;
        console.log(data);
        $('.hand').html('');
        add = function(card) {
          return $('.hand').append("<li><a href='#'>" + card + "</a></li>").listview('refresh');
        };
        _ref = data.deck.hand;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          card = _ref[_i];
          _results.push(add(card));
        }
        return _results;
      });
    });
    $('#login-form').submit(function(e) {
      console.log('submitted');
      $.post("" + server_url + "/signin.json", $(this).serialize(), function(user) {
        if (user.error != null) {
          alert('invalid username and/or password');
        } else {
          $.cookie('token', user.token);
          $.mobile.changePage('#lobby', {
            transition: 'slidedown'
          });
        }
        return console.log(data);
      }, 'json');
      return e.preventDefault();
    });
    return $('#new-match-username-form').submit(function(e) {
      console.log('submitted username form');
      $.post("" + server_url + "/matches.json", $(this).serialize(), function(data) {
        var error, _i, _len, _ref;
        if (data.errors.length > 0) {
          _ref = data.errors;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            error = _ref[_i];
            alert(error);
          }
        } else {
          alert("match created");
        }
        return console.log(data);
      }, 'json');
      return e.preventDefault();
    });
  });
};
